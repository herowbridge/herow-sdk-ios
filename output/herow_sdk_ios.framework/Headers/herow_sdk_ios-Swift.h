#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef HEROW_SDK_IOS_SWIFT_H
#define HEROW_SDK_IOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreLocation;
@import Foundation;
@import MetricKit;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="herow_sdk_ios",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class CLLocation;

SWIFT_PROTOCOL("_TtP13herow_sdk_ios23DetectionEngineListener_")
@protocol DetectionEngineListener
- (void)onLocationUpdate:(CLLocation * _Nonnull)location;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios10APIManager")
@interface APIManager : NSObject <DetectionEngineListener>
- (void)onLocationUpdate:(CLLocation * _Nonnull)location;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("AppStateDelegate")
@protocol CPAppStateDelegate
/// Notify when the application enters in foreground
- (void)onAppInForeground;
/// Notify when the application enters in background
- (void)onAppInBackground;
@optional
/// Notify when the application willTerminate
- (void)onAppTerminated;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios16AppStateDetector")
@interface AppStateDetector : NSObject <CPAppStateDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)onAppInForeground;
- (void)onAppInBackground;
- (void)onAppTerminated;
@end




/// To launch monitoring and ranging in beaconRegion
SWIFT_PROTOCOL("_TtP13herow_sdk_ios23ClickAndConnectListener_")
@protocol ClickAndConnectListener
- (void)didStopClickAndConnect;
- (void)didStartClickAndConnect;
@end


/// Generic interface to save/load key/value sets
SWIFT_PROTOCOL("_TtP13herow_sdk_ios14DataHolderObjc_")
@protocol DataHolderObjc
/// Set a float value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putFloatWithKey:(NSString * _Nonnull)key value:(float)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or 0.f.
- (float)getFloatWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDoubleWithKey:(NSString * _Nonnull)key value:(double)value;
- (double)getDoubleWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set an int value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putIntWithKey:(NSString * _Nonnull)key value:(NSInteger)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or 0.
- (NSInteger)getIntWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a boolean value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putBooleanWithKey:(NSString * _Nonnull)key value:(BOOL)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or false.
- (BOOL)getBooleanWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a String value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putStringWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (NSString * _Nullable)getStringWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a Data value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putDataWithKey:(NSString * _Nonnull)key value:(NSData * _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (NSData * _Nullable)getDataWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set an object to be written back. The object need to conform to NSCoding protocol to be saved
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)saveNSCodingObjectWithKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (id _Nullable)loadNSCodingObjectWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// @param key
/// @return true if the key is in the dataHolder
- (void)putDateWithKey:(NSString * _Nonnull)key value:(NSDate * _Nonnull)value;
- (NSDate * _Nullable)getDateWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)containsWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)removeWithKey:(NSString * _Nonnull)key;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios22DataHolderUserDefaults")
@interface DataHolderUserDefaults : NSObject <DataHolderObjc>
- (void)putFloatWithKey:(NSString * _Nonnull)key value:(float)value;
- (float)getFloatWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDoubleWithKey:(NSString * _Nonnull)key value:(double)value;
- (double)getDoubleWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putIntWithKey:(NSString * _Nonnull)key value:(NSInteger)value;
- (NSInteger)getIntWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putBooleanWithKey:(NSString * _Nonnull)key value:(BOOL)value;
- (BOOL)getBooleanWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putStringWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (NSString * _Nullable)getStringWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDataWithKey:(NSString * _Nonnull)key value:(NSData * _Nonnull)value;
- (NSData * _Nullable)getDataWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDateWithKey:(NSString * _Nonnull)key value:(NSDate * _Nonnull)value;
- (NSDate * _Nullable)getDateWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)saveNSCodingObjectWithKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)loadNSCodingObjectWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)clear;
- (void)apply;
- (BOOL)containsWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)removeWithKey:(NSString * _Nonnull)key;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios13GenericHolder_")
@protocol GenericHolder
/// apply any pending updates
- (void)apply;
/// Remove all the properties
- (void)clear;
@end


@interface DataHolderUserDefaults (SWIFT_EXTENSION(herow_sdk_ios)) <GenericHolder>
@end


@class CLLocationManager;
@class CLRegion;

SWIFT_CLASS("_TtC13herow_sdk_ios15DetectionEngine")
@interface DetectionEngine : NSObject <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager monitoringDidFailForRegion:(CLRegion * _Nullable)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)registerClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)unregisterClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)registerDetectionListenerWithListener:(id <DetectionEngineListener> _Nonnull)listener;
- (void)unregisterDetectionListenerWithListener:(id <DetectionEngineListener> _Nonnull)listener;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC13herow_sdk_ios12GlobalLogger")
@interface GlobalLogger : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GlobalLogger * _Nonnull shared;)
+ (GlobalLogger * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)startDebug;
- (void)stopDebug;
- (void)startLogInFile;
- (NSArray<NSData *> * _Nonnull)getLogData SWIFT_WARN_UNUSED_RESULT;
- (void)stopLogInFile;
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios13ResetDelegate_")
@protocol ResetDelegate
- (void)reset;
@end

@protocol PermissionsManagerProtocol;

SWIFT_CLASS("_TtC13herow_sdk_ios16HerowInitializer")
@interface HerowInitializer : NSObject <ResetDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (HerowInitializer * _Nonnull)configPlatform:(NSString * _Nonnull)platform SWIFT_WARN_UNUSED_RESULT;
- (HerowInitializer * _Nonnull)configAppWithIdentifier:(NSString * _Nonnull)identifier sdkKey:(NSString * _Nonnull)sdkKey SWIFT_WARN_UNUSED_RESULT;
- (void)synchronize;
- (id <PermissionsManagerProtocol> _Nonnull)getPermissionManager SWIFT_WARN_UNUSED_RESULT;
- (void)reset;
- (BOOL)isOnClickAndCollect SWIFT_WARN_UNUSED_RESULT;
- (void)launchClickAndCollect;
- (void)stopClickAndCollect;
- (BOOL)getOptinValue SWIFT_WARN_UNUSED_RESULT;
- (void)acceptOptin;
- (void)refusetOptin;
- (NSString * _Nullable)getCustomId SWIFT_WARN_UNUSED_RESULT;
- (void)getCustomIdWithCustomId:(NSString * _Nonnull)customId;
- (void)registerClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)unregisterClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
@end

@class CLBeacon;
@class CLBeaconRegion;
@class CLVisit;

/// dispatch the result of the CLLocationManagerDelegate to multiple CLLocationManager.
SWIFT_CLASS("_TtC13herow_sdk_ios18LocationDispatcher")
@interface LocationDispatcher : NSObject <CLLocationManagerDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didRangeBeacons:(NSArray<CLBeacon *> * _Nonnull)beacons inRegion:(CLBeaconRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager * _Nonnull)manager;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager * _Nonnull)manager;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didVisit:(CLVisit * _Nonnull)visit;
@end

typedef SWIFT_ENUM(NSInteger, LocationPermission, closed) {
  LocationPermissionWhenInUse = 0,
  LocationPermissionAlways = 1,
};

@class MXMetricPayload;

SWIFT_CLASS("_TtC13herow_sdk_ios14MetricsManager")
@interface MetricsManager : NSObject <MXMetricManagerSubscriber, ResetDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)didReceiveMetricPayloads:(NSArray<MXMetricPayload *> * _Nonnull)payloads SWIFT_AVAILABILITY(ios,introduced=13.0);
- (void)reset;
@end



SWIFT_CLASS("_TtC13herow_sdk_ios12OpenUrlUtils")
@interface OpenUrlUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios26PermissionsManagerProtocol_")
@protocol PermissionsManagerProtocol
- (void)requestIDFAWithCompletion:(void (^ _Nullable)(void))completion;
- (void)requestLocation:(enum LocationPermission)type completion:(void (^ _Nullable)(void))completion;
- (void)requestActivityWithCompletion:(void (^ _Nullable)(void))completion;
@end



SWIFT_PROTOCOL("_TtP13herow_sdk_ios12TimeProvider_")
@protocol TimeProvider
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios20TimeProviderAbsolute")
@interface TimeProviderAbsolute : NSObject <TimeProvider>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios20TimeProviderRelative")
@interface TimeProviderRelative : NSObject <TimeProvider>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef HEROW_SDK_IOS_SWIFT_H
#define HEROW_SDK_IOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreLocation;
@import Foundation;
@import MetricKit;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="herow_sdk_ios",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class CLLocation;

SWIFT_PROTOCOL("_TtP13herow_sdk_ios23DetectionEngineListener_")
@protocol DetectionEngineListener
- (void)onLocationUpdate:(CLLocation * _Nonnull)location;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios10APIManager")
@interface APIManager : NSObject <DetectionEngineListener>
- (void)onLocationUpdate:(CLLocation * _Nonnull)location;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("AppStateDelegate")
@protocol CPAppStateDelegate
/// Notify when the application enters in foreground
- (void)onAppInForeground;
/// Notify when the application enters in background
- (void)onAppInBackground;
@optional
/// Notify when the application willTerminate
- (void)onAppTerminated;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios16AppStateDetector")
@interface AppStateDetector : NSObject <CPAppStateDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)onAppInForeground;
- (void)onAppInBackground;
- (void)onAppTerminated;
@end




/// To launch monitoring and ranging in beaconRegion
SWIFT_PROTOCOL("_TtP13herow_sdk_ios23ClickAndConnectListener_")
@protocol ClickAndConnectListener
- (void)didStopClickAndConnect;
- (void)didStartClickAndConnect;
@end


/// Generic interface to save/load key/value sets
SWIFT_PROTOCOL("_TtP13herow_sdk_ios14DataHolderObjc_")
@protocol DataHolderObjc
/// Set a float value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putFloatWithKey:(NSString * _Nonnull)key value:(float)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or 0.f.
- (float)getFloatWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDoubleWithKey:(NSString * _Nonnull)key value:(double)value;
- (double)getDoubleWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set an int value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putIntWithKey:(NSString * _Nonnull)key value:(NSInteger)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or 0.
- (NSInteger)getIntWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a boolean value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putBooleanWithKey:(NSString * _Nonnull)key value:(BOOL)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or false.
- (BOOL)getBooleanWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a String value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putStringWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (NSString * _Nullable)getStringWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a Data value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putDataWithKey:(NSString * _Nonnull)key value:(NSData * _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (NSData * _Nullable)getDataWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set an object to be written back. The object need to conform to NSCoding protocol to be saved
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)saveNSCodingObjectWithKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (id _Nullable)loadNSCodingObjectWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// @param key
/// @return true if the key is in the dataHolder
- (void)putDateWithKey:(NSString * _Nonnull)key value:(NSDate * _Nonnull)value;
- (NSDate * _Nullable)getDateWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)containsWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)removeWithKey:(NSString * _Nonnull)key;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios22DataHolderUserDefaults")
@interface DataHolderUserDefaults : NSObject <DataHolderObjc>
- (void)putFloatWithKey:(NSString * _Nonnull)key value:(float)value;
- (float)getFloatWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDoubleWithKey:(NSString * _Nonnull)key value:(double)value;
- (double)getDoubleWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putIntWithKey:(NSString * _Nonnull)key value:(NSInteger)value;
- (NSInteger)getIntWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putBooleanWithKey:(NSString * _Nonnull)key value:(BOOL)value;
- (BOOL)getBooleanWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putStringWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (NSString * _Nullable)getStringWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDataWithKey:(NSString * _Nonnull)key value:(NSData * _Nonnull)value;
- (NSData * _Nullable)getDataWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDateWithKey:(NSString * _Nonnull)key value:(NSDate * _Nonnull)value;
- (NSDate * _Nullable)getDateWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)saveNSCodingObjectWithKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)loadNSCodingObjectWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)clear;
- (void)apply;
- (BOOL)containsWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)removeWithKey:(NSString * _Nonnull)key;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios13GenericHolder_")
@protocol GenericHolder
/// apply any pending updates
- (void)apply;
/// Remove all the properties
- (void)clear;
@end


@interface DataHolderUserDefaults (SWIFT_EXTENSION(herow_sdk_ios)) <GenericHolder>
@end


@class CLLocationManager;
@class CLRegion;

SWIFT_CLASS("_TtC13herow_sdk_ios15DetectionEngine")
@interface DetectionEngine : NSObject <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager monitoringDidFailForRegion:(CLRegion * _Nullable)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)registerClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)unregisterClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)registerDetectionListenerWithListener:(id <DetectionEngineListener> _Nonnull)listener;
- (void)unregisterDetectionListenerWithListener:(id <DetectionEngineListener> _Nonnull)listener;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC13herow_sdk_ios12GlobalLogger")
@interface GlobalLogger : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GlobalLogger * _Nonnull shared;)
+ (GlobalLogger * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)startDebug;
- (void)stopDebug;
- (void)startLogInFile;
- (NSArray<NSData *> * _Nonnull)getLogData SWIFT_WARN_UNUSED_RESULT;
- (void)stopLogInFile;
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios13ResetDelegate_")
@protocol ResetDelegate
- (void)reset;
@end

@protocol PermissionsManagerProtocol;

SWIFT_CLASS("_TtC13herow_sdk_ios16HerowInitializer")
@interface HerowInitializer : NSObject <ResetDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (HerowInitializer * _Nonnull)configPlatform:(NSString * _Nonnull)platform SWIFT_WARN_UNUSED_RESULT;
- (HerowInitializer * _Nonnull)configAppWithIdentifier:(NSString * _Nonnull)identifier sdkKey:(NSString * _Nonnull)sdkKey SWIFT_WARN_UNUSED_RESULT;
- (void)synchronize;
- (id <PermissionsManagerProtocol> _Nonnull)getPermissionManager SWIFT_WARN_UNUSED_RESULT;
- (void)reset;
- (BOOL)isOnClickAndCollect SWIFT_WARN_UNUSED_RESULT;
- (void)launchClickAndCollect;
- (void)stopClickAndCollect;
- (BOOL)getOptinValue SWIFT_WARN_UNUSED_RESULT;
- (void)acceptOptin;
- (void)refusetOptin;
- (NSString * _Nullable)getCustomId SWIFT_WARN_UNUSED_RESULT;
- (void)getCustomIdWithCustomId:(NSString * _Nonnull)customId;
- (void)registerClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)unregisterClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
@end

@class CLBeacon;
@class CLBeaconRegion;
@class CLVisit;

/// dispatch the result of the CLLocationManagerDelegate to multiple CLLocationManager.
SWIFT_CLASS("_TtC13herow_sdk_ios18LocationDispatcher")
@interface LocationDispatcher : NSObject <CLLocationManagerDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didRangeBeacons:(NSArray<CLBeacon *> * _Nonnull)beacons inRegion:(CLBeaconRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager * _Nonnull)manager;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager * _Nonnull)manager;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didVisit:(CLVisit * _Nonnull)visit;
@end

typedef SWIFT_ENUM(NSInteger, LocationPermission, closed) {
  LocationPermissionWhenInUse = 0,
  LocationPermissionAlways = 1,
};

@class MXMetricPayload;

SWIFT_CLASS("_TtC13herow_sdk_ios14MetricsManager")
@interface MetricsManager : NSObject <MXMetricManagerSubscriber, ResetDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)didReceiveMetricPayloads:(NSArray<MXMetricPayload *> * _Nonnull)payloads SWIFT_AVAILABILITY(ios,introduced=13.0);
- (void)reset;
@end



SWIFT_CLASS("_TtC13herow_sdk_ios12OpenUrlUtils")
@interface OpenUrlUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios26PermissionsManagerProtocol_")
@protocol PermissionsManagerProtocol
- (void)requestIDFAWithCompletion:(void (^ _Nullable)(void))completion;
- (void)requestLocation:(enum LocationPermission)type completion:(void (^ _Nullable)(void))completion;
- (void)requestActivityWithCompletion:(void (^ _Nullable)(void))completion;
@end



SWIFT_PROTOCOL("_TtP13herow_sdk_ios12TimeProvider_")
@protocol TimeProvider
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios20TimeProviderAbsolute")
@interface TimeProviderAbsolute : NSObject <TimeProvider>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios20TimeProviderRelative")
@interface TimeProviderRelative : NSObject <TimeProvider>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#ifndef HEROW_SDK_IOS_SWIFT_H
#define HEROW_SDK_IOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreLocation;
@import Foundation;
@import MetricKit;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="herow_sdk_ios",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class CLLocation;

SWIFT_PROTOCOL("_TtP13herow_sdk_ios23DetectionEngineListener_")
@protocol DetectionEngineListener
- (void)onLocationUpdate:(CLLocation * _Nonnull)location;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios10APIManager")
@interface APIManager : NSObject <DetectionEngineListener>
- (void)onLocationUpdate:(CLLocation * _Nonnull)location;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("AppStateDelegate")
@protocol CPAppStateDelegate
/// Notify when the application enters in foreground
- (void)onAppInForeground;
/// Notify when the application enters in background
- (void)onAppInBackground;
@optional
/// Notify when the application willTerminate
- (void)onAppTerminated;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios16AppStateDetector")
@interface AppStateDetector : NSObject <CPAppStateDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)onAppInForeground;
- (void)onAppInBackground;
- (void)onAppTerminated;
@end




/// To launch monitoring and ranging in beaconRegion
SWIFT_PROTOCOL("_TtP13herow_sdk_ios23ClickAndConnectListener_")
@protocol ClickAndConnectListener
- (void)didStopClickAndConnect;
- (void)didStartClickAndConnect;
@end


/// Generic interface to save/load key/value sets
SWIFT_PROTOCOL("_TtP13herow_sdk_ios14DataHolderObjc_")
@protocol DataHolderObjc
/// Set a float value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putFloatWithKey:(NSString * _Nonnull)key value:(float)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or 0.f.
- (float)getFloatWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDoubleWithKey:(NSString * _Nonnull)key value:(double)value;
- (double)getDoubleWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set an int value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putIntWithKey:(NSString * _Nonnull)key value:(NSInteger)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or 0.
- (NSInteger)getIntWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a boolean value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putBooleanWithKey:(NSString * _Nonnull)key value:(BOOL)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or false.
- (BOOL)getBooleanWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a String value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putStringWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (NSString * _Nullable)getStringWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set a Data value to be written back
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)putDataWithKey:(NSString * _Nonnull)key value:(NSData * _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (NSData * _Nullable)getDataWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Set an object to be written back. The object need to conform to NSCoding protocol to be saved
/// @param key   The name of the property to modify.
/// @param value The new value for the property.
- (void)saveNSCodingObjectWithKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
/// @param key the name of the property to retrieve
/// @return the preference value if it exists, or nil.
- (id _Nullable)loadNSCodingObjectWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// @param key
/// @return true if the key is in the dataHolder
- (void)putDateWithKey:(NSString * _Nonnull)key value:(NSDate * _Nonnull)value;
- (NSDate * _Nullable)getDateWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)containsWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)removeWithKey:(NSString * _Nonnull)key;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios22DataHolderUserDefaults")
@interface DataHolderUserDefaults : NSObject <DataHolderObjc>
- (void)putFloatWithKey:(NSString * _Nonnull)key value:(float)value;
- (float)getFloatWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDoubleWithKey:(NSString * _Nonnull)key value:(double)value;
- (double)getDoubleWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putIntWithKey:(NSString * _Nonnull)key value:(NSInteger)value;
- (NSInteger)getIntWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putBooleanWithKey:(NSString * _Nonnull)key value:(BOOL)value;
- (BOOL)getBooleanWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putStringWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (NSString * _Nullable)getStringWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDataWithKey:(NSString * _Nonnull)key value:(NSData * _Nonnull)value;
- (NSData * _Nullable)getDataWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)putDateWithKey:(NSString * _Nonnull)key value:(NSDate * _Nonnull)value;
- (NSDate * _Nullable)getDateWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)saveNSCodingObjectWithKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (id _Nullable)loadNSCodingObjectWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)clear;
- (void)apply;
- (BOOL)containsWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)removeWithKey:(NSString * _Nonnull)key;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios13GenericHolder_")
@protocol GenericHolder
/// apply any pending updates
- (void)apply;
/// Remove all the properties
- (void)clear;
@end


@interface DataHolderUserDefaults (SWIFT_EXTENSION(herow_sdk_ios)) <GenericHolder>
@end


@class CLLocationManager;
@class CLRegion;

SWIFT_CLASS("_TtC13herow_sdk_ios15DetectionEngine")
@interface DetectionEngine : NSObject <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager monitoringDidFailForRegion:(CLRegion * _Nullable)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)registerClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)unregisterClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)registerDetectionListenerWithListener:(id <DetectionEngineListener> _Nonnull)listener;
- (void)unregisterDetectionListenerWithListener:(id <DetectionEngineListener> _Nonnull)listener;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC13herow_sdk_ios12GlobalLogger")
@interface GlobalLogger : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GlobalLogger * _Nonnull shared;)
+ (GlobalLogger * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)startDebug;
- (void)stopDebug;
- (void)startLogInFile;
- (NSArray<NSData *> * _Nonnull)getLogData SWIFT_WARN_UNUSED_RESULT;
- (void)stopLogInFile;
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios13ResetDelegate_")
@protocol ResetDelegate
- (void)reset;
@end

@protocol PermissionsManagerProtocol;

SWIFT_CLASS("_TtC13herow_sdk_ios16HerowInitializer")
@interface HerowInitializer : NSObject <ResetDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (HerowInitializer * _Nonnull)configPlatform:(NSString * _Nonnull)platform SWIFT_WARN_UNUSED_RESULT;
- (HerowInitializer * _Nonnull)configAppWithIdentifier:(NSString * _Nonnull)identifier sdkKey:(NSString * _Nonnull)sdkKey SWIFT_WARN_UNUSED_RESULT;
- (void)synchronize;
- (id <PermissionsManagerProtocol> _Nonnull)getPermissionManager SWIFT_WARN_UNUSED_RESULT;
- (void)reset;
- (BOOL)isOnClickAndCollect SWIFT_WARN_UNUSED_RESULT;
- (void)launchClickAndCollect;
- (void)stopClickAndCollect;
- (BOOL)getOptinValue SWIFT_WARN_UNUSED_RESULT;
- (void)acceptOptin;
- (void)refusetOptin;
- (NSString * _Nullable)getCustomId SWIFT_WARN_UNUSED_RESULT;
- (void)getCustomIdWithCustomId:(NSString * _Nonnull)customId;
- (void)registerClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
- (void)unregisterClickAndCollectListenerWithListener:(id <ClickAndConnectListener> _Nonnull)listener;
@end

@class CLBeacon;
@class CLBeaconRegion;
@class CLVisit;

/// dispatch the result of the CLLocationManagerDelegate to multiple CLLocationManager.
SWIFT_CLASS("_TtC13herow_sdk_ios18LocationDispatcher")
@interface LocationDispatcher : NSObject <CLLocationManagerDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didRangeBeacons:(NSArray<CLBeacon *> * _Nonnull)beacons inRegion:(CLBeaconRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager * _Nonnull)manager;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager * _Nonnull)manager;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didVisit:(CLVisit * _Nonnull)visit;
@end

typedef SWIFT_ENUM(NSInteger, LocationPermission, closed) {
  LocationPermissionWhenInUse = 0,
  LocationPermissionAlways = 1,
};

@class MXMetricPayload;

SWIFT_CLASS("_TtC13herow_sdk_ios14MetricsManager")
@interface MetricsManager : NSObject <MXMetricManagerSubscriber, ResetDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)didReceiveMetricPayloads:(NSArray<MXMetricPayload *> * _Nonnull)payloads SWIFT_AVAILABILITY(ios,introduced=13.0);
- (void)reset;
@end



SWIFT_CLASS("_TtC13herow_sdk_ios12OpenUrlUtils")
@interface OpenUrlUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP13herow_sdk_ios26PermissionsManagerProtocol_")
@protocol PermissionsManagerProtocol
- (void)requestIDFAWithCompletion:(void (^ _Nullable)(void))completion;
- (void)requestLocation:(enum LocationPermission)type completion:(void (^ _Nullable)(void))completion;
- (void)requestActivityWithCompletion:(void (^ _Nullable)(void))completion;
@end



SWIFT_PROTOCOL("_TtP13herow_sdk_ios12TimeProvider_")
@protocol TimeProvider
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios20TimeProviderAbsolute")
@interface TimeProviderAbsolute : NSObject <TimeProvider>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13herow_sdk_ios20TimeProviderRelative")
@interface TimeProviderRelative : NSObject <TimeProvider>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (double)getTime SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
